from random import randint
from requests import *
import vk
import db
import beautify

# –í—Å—è–∫–∏–µ –≤–∫—É—Å–Ω–æ—Å—Ç–∏ –±—É–∫–≤
GROUPSEND_WORD = '–≥—Ä—É–ø—Ä–∞—Å'
DEBUG_WORD = '–¥–µ–±–∞–≥'
CREATE_SCHOOL_WORD = '—Å—à'
HELP_WORD = '–ø–æ–º–æ—â—å'
ADD_WORD = '–¥–æ–±'
WHOIN_WORD = '–∫—Ç–æ –≤'

# –£–∫–∞–∑—ã–≤–∞–µ–º –∫–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞, id –≥—Ä—É–ø–ø—ã –∏ –≤–µ—Ä—Å–∏—é API
VK_API_ACCESS_TOKEN = '0405278c1d9aa5b5962e158cfc6e036ebb3703d671d5042df8d9d807e1a6cbbb577effb424664c474efe6'
VK_API_VERSION = '5.95'
GROUP_ID = 199935063

session = vk.Session(access_token=VK_API_ACCESS_TOKEN)
api = vk.API(session, v=VK_API_VERSION)

# –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ LongPoll: –ø–æ–ª—É—á–∞–µ–º server –∏ key
longPoll = api.groups.getLongPollServer(group_id=GROUP_ID)
server, key, ts = longPoll['server'], longPoll['key'], longPoll['ts']


def debug_response(update):
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    name = api.users.get(user_ids=update['object']['from_id'])[0]['first_name']

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ –í–ö
    pfile = post(api.photos.getMessagesUploadServer(peer_id=update['object']['from_id'])['upload_url'],
                 files={'photo': open('shnek.jpg', 'rb')}).json()
    photo = api.photos.saveMessagesPhoto(server=pfile['server'], photo=pfile['photo'], hash=pfile['hash'])[0]
    print("sasu")

    # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏
    roles_list = db.fetch_roles(update['object']['from_id'])
    roles_str = beautify.roles_list2str(roles_list)

    # –ü–æ–ª—É—á–∞–µ–º —à–∫–æ–ª—ã
    schools_list = db.fetch_all_schools()
    schools_str = beautify.schools_list2str(schools_list)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = ""
    msg = msg + '–ü—Ä–∏–≤–µ—Ç, %s &#128521;\n' % name
    msg = msg + '\n' + "–í–æ—Ç —Ç–≤–æ–∏ —Ä–æ–ª–∏:\n" + roles_str
    msg = msg + "\n\n–ê –≤–æ—Ç –≤—Å–µ —à–∫–æ–ª—ã –≤ —Å–µ—Ç–∏:\n" + schools_str

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    api.messages.send(user_id=update['object']['from_id'], random_id=randint(-2147483648, 2147483647),
                      message=msg,
                      attachment='photo%s_%s' % (photo['owner_id'], photo['id']))
    return


def simple_response(update, msg):
    name = api.users.get(user_ids=update['object']['from_id'])[0]['first_name']
    api.messages.send(user_id=update['object']['from_id'], random_id=randint(-2147483648, 2147483647),
                      message=('%s, –ø—Ä–∏–≤–µ—Ç!  &#128521;\n' % name) + msg + '\n')
    return


def send_text(update, msg):
    api.messages.send(user_id=update['object']['from_id'], random_id=randint(-2147483648, 2147483647),
                      message=msg)
    return


def begins_with(a, b):
    return a[:len(b)] == b


def help_response(update):
    #
    msg = """
–ü—Ä–∏–≤–µ—Ç! –Ø —Ü–∏—Ñ—Ä–æ–≤–æ–π –≥–æ–ª—É–±—å-–ø–æ—á—Ç–∞–ª—å–æ–Ω –ë–∞—Ç–æ. –ú–æ—è —Ä–∞–±–æ—Ç–∞ - –≤–æ–≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç —É—á–∏—Ç–µ–ª–µ–π. üòâ

~~~~ –ö–æ–º–∞–Ω–¥—ã ~~~~
%s - –≤—ã–≤–æ–¥–∏—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
%s - –∫–æ–µ-—á—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç
%s - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —à–∫–æ–ª—É
%s [–∫–æ–º—É_id] [—à–∫–æ–ª–∞] [—Ä–æ–ª—å] - –¥–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å —á–µ–ª–æ–≤–µ–∫—É —Å –∫–æ–º—É_id
%s [—à–∫–æ–ª–∞] - –≤—ã–≤–æ–¥–∏—Ç —Å–æ—Å—Ç–∞–≤ —à–∫–æ–ª—ã
%s [—à–∫–æ–ª–∞] - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –≤ —à–∫–æ–ª–µ
~~~~~~~~~~~~~~~~



–ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –≤ —Ä–∞–º–∫–∞—Ö —à–∫–æ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –ì–û–£ –Ø–û "–õ–∏—Ü–µ–π ‚Ññ86"

–ï—Å–ª–∏ –Ω–∞–π–¥—ë—Ç–µ –æ—à–∏–±–∫–∏/–±–∞–≥–∏, —Å–æ–æ–±—â–∏—Ç–µ –º–Ω–µ!
–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @id388032588(–¢–∞–º–ø–∏–æ –ò–ª—å—è), —É—á–µ–Ω–∏–∫ 11–ë –∫–ª–∞—Å—Å–∞.
Github: github.com/Quakumei Telegram: @yasumi404
""" % (HELP_WORD, DEBUG_WORD, CREATE_SCHOOL_WORD, ADD_WORD, WHOIN_WORD, GROUPSEND_WORD)
    # –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–≤—ã –≤–∫
    pfile = post(api.photos.getMessagesUploadServer(peer_id=update['object']['from_id'])['upload_url'],
                 files={'photo': open('bato.jpg', 'rb')}).json()
    photo = api.photos.saveMessagesPhoto(server=pfile['server'], photo=pfile['photo'], hash=pfile['hash'])[0]

    # —Å–æ–æ
    api.messages.send(user_id=update['object']['from_id'], random_id=randint(-2147483648, 2147483647),
                      message=msg,
                      attachment='photo%s_%s' % (photo['owner_id'], photo['id']))
    return


def create_school(update, school_name):
    status = db.create_school(school_name, update['object']['from_id'])
    return status


def status_response(update, status):
    if status == 0:
        simple_response(update, "–£—Å–ø–µ—Ö!")
    elif status == -1:
        simple_response(update, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")
    else:
        simple_response(update, "–í—Å—ë *–æ—á–µ–Ω—å* –ø–ª–æ—Ö–æ.")
    return


def add_attribute(user_id, group_id, role):
    return db.user_add_attribute(user_id, group_id, role)


def who_in_school(school_name):
    status, response = db.fetch_pupils(school_name)
    return status, response


def parse_attachments2str(attachments):
    res = ""
    urls = []
    for a in attachments:
        # url
        if a['type'] in ["doc", "audio"]:
            urls.append(a[a['type']]['url'])
        else:
            if a['type'] == 'photo':
                max_height = 0
                for i in a[a['type']]['sizes']:
                    if i['height'] > max_height:
                        max_height = i['height']
                for i in a[a['type']]['sizes']:
                    print(i)
                    if i['height'] == max_height:
                        urls.append(i['url'])
                        print(i['url'])
                        break
            elif a[a['type']] == 'video':
                urls.append(a['type'] + str(a[a['type']]['owner_id']) + "_" + str(a[a['type']]['id']))

        res += a['type'] + str(a[a['type']]['owner_id']) + "_" + str(a[a['type']]['id']) + ","

    # print(attachments)
    # print(res[:-1])

    if res == "":
        return ""
    return res[:-1], urls


def send_to_person(update, person_id):
    # TODO: –î–æ–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç (—Ä–æ–ª–∏ –≤ –≥—Ä—É–ø–ø–µ –≤ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–ø–∏—Å–∞–ª–∏) --- –°–î–ï–õ–ê–ù–û
    # TODO: –†–ê–°–°–´–õ–ö–ê –° –í–õ–û–ñ–ï–ù–ò–Ø–ú–ò !!!!!!! --- –°–î–ï–õ–ê–ù–û

    # TODO: –ó–ê–ú–ï–¢–ö–ê: –ü–†–ò –û–¢–ü–†–ê–í–ö–ï –í–ò–î–û–°–û–í –° –Æ–¢–£–ë–ê –ù–ï–û–ë–•–û–î–ò–ú–û –î–û–ë–ê–í–ò–¢–¨ –ò–• –ü–û –°–°–´–õ–ö–ï –ß–ï–†–ï–ó –ò–ù–¢–ï–†–§–ï–ô–° –í–ö –ò–ù–ê–ß–ï –ù–ò–ß–ï–ì–û –ù–ï –°–†–ê–ë–û–¢–ê–ï–¢ (–ò–õ–ò –ü–†–û–°–¢–û –û–°–¢–ê–í–¨–¢–ï –°–°–´–õ–ö–£)
    # TODO: –≠–¢–û –ü–û–•–û–î–£ –ò–ó –ó–ê –¢–û–ì–û –ß–¢–û –û–ù–û –î–ï–õ–ê–ï–¢–°–Ø –ü–†–ò–í–ê–¢–ù–´–ú –ò –ü–û–ß–ï–ú–£ –¢–û –í–û–û–ë–©–ï –°–°–´–õ–ö–£ –ù–ï–õ–¨–ó–Ø –≠–ö–°–¢–†–ê–î–ò–†–û–í–ê–¢–¨ –ï–°–õ–ò –ï–Å –Ø–í–ù–û –ù–ï –°–ö–ò–ù–£–¢–¨
    # TODO: –°–ö–û–†–ï–ï –í–°–ï–ì–û –°–í–Ø–ó–ê–ù–û –° –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò –ü–†–ò–í–ê–¢–ù–û–°–¢–ò –î–õ–Ø –ù–û–í–û–î–û–ë–ê–í–õ–ï–ù–ù–´–• –í–ò–î–û–°–û–í –ò–õ–ò –ß–¢–û –¢–û –¢–ê–ö–û–ï
    # TODO: –í–°–Å –û–°–¢–ê–õ–¨–ù–û–ï +- –†–ê–ë–û–¢–ê–ï–¢

    # TODO: –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –∫–∞—Ä—Ç—ã –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ (–¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—à–∫–∏ –∫–ª—ë–≤–æ –±—É–¥–µ—Ç)
    # –ü–æ –∏–¥–µ–µ –≤–æ –≤–ª–æ–∂–µ–Ω–∏—è—Ö —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—ë –∫—Ä–æ–º–µ –≤–∏–¥–æ—Å–∞

    # –ë–µ—Ä—ë–º –∑–Ω–∞—á–∏—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≥–æ —á—Ç–æ –Ω–∞–º –ø—Ä–∏—Å–ª–∞–ª–∏
    attachment_str, urls = parse_attachments2str(update['object']['attachments'])
    # print(attachment_str)
    print(urls)

    # –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ–π –∫–æ–¥
    msg = "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç @id" + str(update['object']['from_id']) + ":\n\n" + update['object']['text']
    if attachment_str:
        msg = msg + "\n\n–í–ª–æ–∂–µ–Ω–∏—è:\n" + str("\n".join(urls))

    api.messages.send(user_id=person_id, random_id=randint(-2147483648, 2147483647),
                      message=msg,
                      attachment=attachment_str)


def send_to_recipients(update, recipients):
    for r in recipients:
        send_to_person(update, r)


def send_to_group(update, group_id):
    # Fetch getters
    status1, response = who_in_school(group_id)

    # Parse and get ids of people in the group
    recipients = []
    for r in response:
        # id vkid school role
        recipients.append(r[1])
    recipients = list(dict.fromkeys(recipients))
    # Send messages
    send_to_recipients(update, recipients)

    return status1


ticks_count = False
user_string_flag = False
school_dialogue_flag = False
user_string = ""
while True:
    ticks_count += 1
    print(str(ticks_count) + " cycles...")
    # –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã: –º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ ts
    longPoll = post('%s' % server, data={'act': 'a_check',
                                         'key': key,
                                         'ts': ts,
                                         'wait': 12}).json()
    print(longPoll)
    if longPoll['updates'] and len(longPoll['updates']) != 0:
        for update in longPoll['updates']:
            if update['type'] == 'message_new':
                # print(update)

                # –ü–æ–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
                api.messages.markAsRead(peer_id=update['object']['from_id'])

                ### –û—Ç–≤–µ—á–∞–µ–º ###
                msg = update['object']['text']
                user_id = update['object']['from_id']

                if user_string_flag:
                    user_string = msg

                # DEBUG
                if begins_with(msg, DEBUG_WORD):
                    debug_response(update)

                # HELP
                elif begins_with(msg, HELP_WORD):
                    help_response(update)

                # TODO: HELP RESPONSE
                # TODO: REMOVE ATTRIBUTE
                # TODO: SEND MESSAGE TO THE GROUP_ID --- DONE!
                # TODO: SEND MESSAGE TO THE GROUP_ID - ROLE_TAG
                # TODO: FIX FUCKING ADDING ATTRIBUTE --- DONE!
                # TODO: VK INTERFACE BUTTONS ???

                # GROUP SEND

                elif begins_with(msg, GROUPSEND_WORD):
                    check = beautify.check_cmd(msg, GROUPSEND_WORD, 1, True)
                    if check == -1:
                        simple_response(update, "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
                    else:
                        # –≥—Ä—É–ø—Ä–∞—Å [–≥—Ä—É–ø] –¥–∞–ª—å—à–µ —Å–æ–æ
                        status = send_to_group(update, check[0])
                        status_response(update, status)


                # WHO IN
                elif begins_with(msg, WHOIN_WORD):
                    check = beautify.check_cmd(msg, WHOIN_WORD, 1)
                    if check == -1:
                        simple_response(update, "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
                    else:
                        # –∫—Ç–æ –≤ [–ù–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã]
                        status, users_roles = who_in_school(*check)
                        status_response(update, status)
                        send_text(update, beautify.userRoles2Str(users_roles))
                        # simple_response(update, str(users_roles))


                # ADD ATTRIBUTE
                elif begins_with(msg, ADD_WORD):
                    check = beautify.check_cmd(msg, ADD_WORD, 3)
                    if check == -1:
                        simple_response(update, "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!")
                    else:
                        # –¥–æ–± [id] [–ù–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã] [—Ä–æ–ª—å]
                        status = add_attribute(*check)
                        status_response(update, status)


                # CREATE SCHOOL
                elif begins_with(msg, CREATE_SCHOOL_WORD) or school_dialogue_flag:
                    if not school_dialogue_flag:
                        simple_response(update, "–î–∞–≤–∞–π –ø–æ–º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å —à–∫–æ–ª—É!\n–ù–∞–ø–∏—à–∏, –∫–∞–∫ –æ–Ω–∞ –±—É–¥–µ—Ç –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è:")
                        school_dialogue_flag = True
                        user_string_flag = True
                        break
                    else:
                        school_dialogue_flag = False
                        user_string_flag = False
                        status1 = create_school(update, user_string)
                        status2 = add_attribute(user_id, user_string, "–í–ª–∞–¥–µ–ª–µ—Ü")
                        status_response(update, status1 + status2)


                # FINALLY
                else:
                    simple_response(update, "–¢—ã –ø–æ–ø–∞–ª—Å—è –≤ else.")

    # –ú–µ–Ω—è–µ–º ts –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    ts = longPoll['ts']
